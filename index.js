// Generated by CoffeeScript 1.10.0
var fs, makeCollection, makeNodeModulesName, makePackagesName, nodeModulesName, packagesName, quest;

fs = require('fs');

makeCollection = require('lodash.zipobject');

makePackagesName = function(files) {
  var buildTool, i, len, one, packages, part, three, two;
  packages = [];
  one = function(arr) {
    if (arr.length === 1) {
      return true;
    }
  };
  two = function(arr) {
    if (arr.length === 2) {
      return true;
    }
  };
  three = function(arr) {
    if (arr.length === 3) {
      return true;
    }
  };
  buildTool = function(arr) {
    if (arr[0] === 'gulp' || arr[0] === 'grunt') {
      return true;
    }
  };
  for (i = 0, len = files.length; i < len; i++) {
    part = files[i];
    part = part.split('-');
    if (one(part)) {
      packages.push(part[0]);
    } else if (((one(part)) || (two(part))) && buildTool(part)) {
      packages.push(part[1]);
    } else if ((three(part)) && buildTool(part)) {
      packages.push("" + part[1] + (part[2][0].toUpperCase()) + part[2].slice(1));
    } else if ((two(part)) && !buildTool(part)) {
      packages.push("" + part[0] + (part[1][0].toUpperCase()) + part[1].slice(1));
    } else if ((three(part)) && !buildTool(part)) {
      packages.push("" + part[0] + (part[1][0].toUpperCase()) + part[1].slice(1) + (part[2][0].toUpperCase()) + part[2].slice(1));
    }
  }
  return packages;
};

makeNodeModulesName = function(files) {
  var file, i, len, results;
  results = [];
  for (i = 0, len = files.length; i < len; i++) {
    file = files[i];
    results.push(require(file));
  }
  return results;
};

quest = fs.readdirSync('./node_modules').slice(1);

packagesName = makePackagesName(quest);

nodeModulesName = makeNodeModulesName(quest);

module.exports = makeCollection(packagesName, nodeModulesName);

module.exports.makePackagesName = makePackagesName;
